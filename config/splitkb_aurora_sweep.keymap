/*
 * Copyright (c) 2022 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include "keys_de_swiss.h"
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

&mt {
    //  flavor = "tap-preferred";
    // tapping_term_ms = <200>;
};

&led_strip {
    chain-length = <21>;
};

/ {
    combos {
        compatible = "zmk,combos";

        n1 {
            bindings = <&kp NUMBER_1>;
            key-positions = <0 10>;
        };

        n2 {
            bindings = <&kp NUMBER_2>;
            key-positions = <1 11>;
        };

        n3 {
            bindings = <&kp NUMBER_3>;
            key-positions = <2 12>;
        };

        n4 {
            bindings = <&kp NUMBER_4>;
            key-positions = <3 13>;
        };

        n5 {
            bindings = <&kp NUMBER_5>;
            key-positions = <4 14>;
        };

        n6 {
            bindings = <&kp NUMBER_6>;
            key-positions = <5 15>;
        };

        n7 {
            bindings = <&kp NUMBER_7>;
            key-positions = <6 16>;
        };

        n8 {
            bindings = <&kp NUMBER_8>;
            key-positions = <7 17>;
        };

        n9 {
            bindings = <&kp NUMBER_9>;
            key-positions = <8 18>;
        };

        n0 {
            bindings = <&kp NUMBER_0>;
            key-positions = <9 19>;
        };

        l-enter {
            bindings = <&kp ENTER>;
            key-positions = <13 12>;
        };

        r-enter {
            bindings = <&kp ENTER>;
            key-positions = <16 17>;
        };

        l-gui {
            bindings = <&kp LEFT_GUI>;
            key-positions = <23 12>;
        };

        r-gui {
            bindings = <&kp RIGHT_GUI>;
            key-positions = <26 17>;
        };
    };

    macros {
        new_macro: new_macro {
            compatible = "zmk,behavior-macro";
            label = "NEW_MACRO";
            #binding-cells = <0>;
            bindings =
                <&none>,
                <&macro_tap>,
                <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q  &kp W  &kp E      &kp R           &kp T  &kp Z  &kp U      &kp I    &kp O            &kp P
&kp A  &kp S  &kp D      &kp F           &kp G  &kp H  &kp J      &kp K    &kp L  &kp DE_A_UMLAUT
&kp Y  &kp X  &kp C      &kp V           &kp B  &kp N  &kp M  &kp COMMA  &kp DOT        &kp MINUS
                     &kp SPACE  &sk LEFT_SHIFT  &mo 1  &kp E
            >;
        };

        nav_nag {
            bindings = <
&kp DE_GRAVE      &kp DE_AT  &kp DE_EQUAL  &kp DE_AMPERSAND  &kp DE_CARET  &kp DE_PERCENT  &kp DE_DOUBLE_QUOTES   &kp DE_PLUS           &kp NUM_9  &kp DE_U_UMLAUT
    &kp HOME  &kp PAGE_DOWN   &kp PAGE_UP           &kp END  &kp DE_TILDE  &kp LEFT_ARROW        &kp DOWN_ARROW  &kp UP_ARROW     &kp RIGHT_ARROW  &kp DE_A_UMLAUT
&kp DE_ACUTE          &to 2  &kp CAPSLOCK     &kp DE_DOLLAR   &kp DE_HASH   &kp DE_DEGREE   &kp DE_SINGLE_QUOTE  &kp DE_ASTRK  &kp DE_EXCLAMATION  &kp DE_QUESTION
                                                      &mo 1      &kp LGUI        &kp RGUI                 &mo 2
            >;
        };

        f_special {
            bindings = <
  &bt BT_CLR    &bt BT_NXT    &bt BT_PRV  &kp DLLR  &kp PRCT   &kp CRRT      &kp AMPS  &kp KMLT     &kp LPRN    &kp RPRN
&bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &kp COLN  &kp SCLN  &kp MINUS  &kp KP_EQUAL  &kp LBRC     &kp RBRC    &kp BKSP
  &sys_reset   &bootloader      &kp LBKT  &kp RBKT  &kp BSLH  &kp UNDER      &kp LEFT  &kp DOWN  &bootloader  &sys_reset
                                             &mo 0  &kp LCTL      &to 0         &mo 2
            >;
        };
    };
};
